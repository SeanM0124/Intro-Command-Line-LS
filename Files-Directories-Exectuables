/*
/ - The root directory or a separator when listing directories
. - The current directory (also ./) or the same level
.. - The directory one level up (also ../)
../.. - The directory that is two levels up; that is, the directory that is one level up from ..
~ - Your "home" directory, or the directory you are placed in when you log in.
* - The "splat" or "glob" operator. This is the wildcard of the command line and represents "any characters."
*/

 #1. Make a directory in your home directory called "cli-tmp"
mkdir cli-tmp

#2. From home directory, create afile in the cli-tmp directory called "from-home.txt"
 cd
 touch cli-tmp/in-cli-tmp
 
#3. Navigate to the cli-tmp directory, then create a file called "in-cli-tmp"
cd cli-tmp
touch in-cli-tmp

#4. Try to make a directory called "in-cli-tmp" within cli-tmp. What happens?
mkdir in-cli-tmp
#fails, file exists "mkdir: in-cli-tmp: File exists"

#5. Remove the from-home.txt
rm from-home.txt

#6. Remove the cli-tmp directory
rm cli-tmp #fails
rm -r cli-tmp

#7. Create a nested set of directories in your home directory: cli-tmp > parents > children > grandchildren
mkdir -p cli-tmp/parents/children/grandchildren

#8. Navigate to the children directory
cd children #fails
cd ~/cli-tmp/parents/children

#9. create a file named "bob"
touch bob

#10. Move the file named bob to the grandchildren directory
mv bob grandchildren

#11. Copy the grandchildren directory to the parents directory with a new name: nephews
cp -r grandchildren../nephews

#12. Copy the contents of the "nephews" directory to the "children" directory.
cp ../nephews/* ./

#13. View what you've done with the tree command: tree ~/cli-tmp.
$ tree ~/cli-tmp
/Users/[username]/cli-tmp/
└── parents
  ├── children
  │   ├── bob
  │   └── grandchildren
  │       └── bob
  └── nephews
      └── bob
      
#14. Remove the "bob" file from the grandchildren directory.
 rm ~/cli-tmp/parents/children/grandchildren/bob
 
#15. Remove the cli-tmp directory.
 cd
 rm -r cli-tmp
 
 #EXERCISES
 
 #1. List the hidden files in a directory.
 ls -a #lists all files including hidden ones
 ls -d .* #lists only the hidden files
 
 #2. List the files in the parent directory. Then list the files in the parent directory's parent directory.
 ls .. #lists files in the parent directory
 ls ../.. #lists the files of the parent directory's parent directory
 
 #3. What's the difference between abc/ and /abc?
 #abc/ is the the larger path prior to a working directory, /abc is a inside of the root directory
 #4. What does ../abc mean?
 #../abc means the directory one level up from abc
 
 #5. Suppose you are in a directory with 7 files. You need to move 6 of them into a "tmp" directory, that you have yet to create. How do you do that?
 #multiple ways, but the most efficient method would be to move all 7 over, then move back the one you dont need
 mv * ~/tmp
 mv ~/tmp/file.name ./
 
 #6. Suppose you have two directories called xyz/ and abc/. How do you move all the files in abc/ that end with ".txt" into xyz/?
 mv abc/*.txt xyz/
 
 
 #7. Let's review some common navigation tasks:
 pwd
 cd
 cd /
 cd ~
 
 #8. In this exercise we're going to play with executables. 
 #We'll find the location of so-called "default executables" by using the which command, then execute a file using its absolute path.
 
 which touch
 which rm
 
 rm test

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
